#
# These features are backward-incompatible and can therefore only be
# implemented in the next major version, i.e., in Stu 3. 
#

#
# Have the same brace syntax as in the shell.  In particular:
#

# The semicolon is required
A { touch A ; }  

# Write a closing brace character into 'A'
>A { echo } ; }

# Error: The command started by '{' is not closed 
A { touch A }

#
# Disallow a mix of transient and files as targets in the same rule.
#

# This is an error
@x A: B  { cp B A ; }

# It can be rewritten as
A: B { cp B A ; }
@x: A; 

# The reason is that in these cases, we currently interpret -o @x as
# equivalent to -o A, rather than -o B.  This is inconsistent with the
# case where '@x' is not used as a target.  The way to rewrite this
# shown above lets people use -o @x as intended, without the need for
# the extra rules for mixed targets that we have at the moment. 

#
# Don't allow both transients and files as targets in the same
# rule.  Also, never allow multiple transient targets.  Then,
# File_Execution will not have to support transients anymore.
#

#
# The 'trivial' flag '-t' should "go up" when applied to the
# dependencies of transient targets. 
#

# 'V' is built because 'A' does not exist. 
A: @x {
	[ -r V ] || {
		exit 1
	}

	cat V >A
}
@x:  -t V; 
V = {correct}

# 'V' is built 'A' does not exist.  The '-t' has to "go up". 
A: @x {
	[ "x$V" = xcorrect ] || {
		exit 1
	}

	echo "$V" >A
}
@x:  $[-t V];
V = {correct}

# The '-t' has to "go up".  Use this in KONECT. 
@all:   list.out;
>list.$name:
	@octave
{
	./list.octave Hello 
}
@octave:  -t ( list.octave $[P] );
list.octave 
{
	cat >list.octave <<EOF
#! /bin/sh
[ "x$P" = x... ] || {
	exit 1
}
echo "$@"
echo correct >A
EOF
	chmod u+x list.octave
}
P = {...}

# Even when a transient target has a command, the '-t' "goes up". 
A: @x {
	[ -r V ] && {
		exit 1
	}

	echo correct >A
}
@x:  -t V {
	echo Executing @x
}
V {
	exit 1
}

#
# $STU_OPTIONS should be called $STUFLAGS (?), to be consistent with
# $MAKEFLAGS, $CFLAGS, etc. 
#

#
# Make the %version mandatory in every file, to avoid parsing a file of
# the wrong Stu version.  
#
