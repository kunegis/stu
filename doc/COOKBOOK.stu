#
# A collection of short snippets of Stu to demonstrate what is possible.
#

#
# Very short examples
#

# Use of parentheses for grouping
@headers:   (list config main).h;

# The usual pattern for analysis of multiple datasets
@plots:  @plot.[NETWORKS];
@plot.$network:  plot/plot.$network.eps;

#
# This example shows off a few more features of Stu.
#

@all: plots/[@datasets].eps;

@datasets:  DATASETS  random-(1 2 3 4 5);

>DATASETS:  -p datasets
{
	ls -1 datasets
}

plots/$dataset.eps:   data/$dataset.filtered.txt mkplots
{
	./mkplot
}

>data/$dataset.filtered.txt:  <data/$dataset.txt filter
{
	./filter
}

#
# This is the most basic example that shows off the interplay between
# Stu's three main features.
#

@all: plots/[DATASETS].eps;

DATASETS = { alpha beta gamma }

plots/$dataset.eps:   data/$dataset.txt mkplot
{
	./mkplot
}

#
# Cases where Stu code really shines, compared to other tools.
#

# How to calculate the size of the largest connected component in KONECT
dat/statistic.coco.simple~$network = dat/statistic.size.lcc~$network;
dat/statistic.size.lcc~$network:  dat/statistic.size.$network { ... }

# What I do after adding a new extractor to KONECT; in this case from the konect-extr/extr/edit/ code
$ stu @basic.[dat/NETWORKS_FAMILY_edit]

#
# Directory are files too, and can be built by Stu.  ("Normal" files are
# properly called regular files.)  The timestamp (mtime) of a directory
# is updated when files are added/removed in the directory, and as a
# result, the -p flag is often used with them.  As a convention,
# filenames that refer to directories can end with a slash.
#

output/data: -p output/ { ... -o output/data ; }

output/ { mkdir -p output ; }
