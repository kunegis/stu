#! /bin/sh
#
# Run all tests that fail, and show their output.  Used to visually
# inspect color ouput, to see whether it looks nice.  This is in
# addition to unit tests that check whether output is correct.
#
# PARAMETERS
#	(optional) Names of tests, like for sh/test
#
# STDOUT
#	The output and error output of the tests, including color
#	codes.  Can for instance be piped into less -R to see all.
#

rm -f bin/stu.test || exit 2
if [ "$NDEBUG" ] ; then
	ln -s stu bin/stu.test || exit 2
else
	ln -s stu.debug bin/stu.test || exit 2
fi

cd tests

if [ "$1" ] ; then
	tests="$@"
else
	tests=$(echo *)
fi

for file in $tests
do
	# Remove optional 'tests/' prefix
	file=$(echo "$file" | sed -e 's,^tests/,,')

	if [ ! -d "$file" ]; then
		echo >&2 "$0: *** '$file' is not a directory"
		error=1
		echo "$file" >&6
		errors=1
		continue
	fi

	cd "$file"

	if [ -r EXITSTATUS ] && ! [ -r NOTTY ]; then

		../../sh/rm_tmps || exit 2

		CMD=
		if [ -r CMD ]; then
			CMD=$(sed -e '/^[[:space:]]*$/d' <CMD)
		fi

		echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
		echo "~~~~~~~~~~~ $file"
		echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
		echo

		# 'sh/tty' makes sure that Stu sees stderr as a TTY,
		# and outputs both stdout and stderr of Stu to stdout.
		eval ../../sh/tty ../../bin/stu.test $CMD

		echo

		../../sh/rm_tmps || exit 2
	fi

	cd ..
done

echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"

exit 0
