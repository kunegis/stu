#! /bin/sh

[ "$cov_eval_debug" ] && exec 6>&2 || exec 6>/dev/null

echo >&6 "ret_file=$ret_file"
ret_file=${TMP:-/tmp}/cov_eval.ret.$$

clean()
{
	echo >&6 clean
	rm -f -- "$ret_file"
}
trap clean EXIT

echo 0 >"$ret_file"

exclude()
{
	if printf '%s\n' "$text" | grep -q -E -e '\bunreachable\s*\(\)' ; then
		printf >&6 "\tUnreachable\n"
		return 0
	fi
	if printf '%s\n' "$text" | grep -q -E -e '\bvirtual\s+~.*=\s*default' ; then
		printf >&6 "\tDefault virtual destructor\n"
		return 0
	fi
	if printf '%s\n' "$text" | grep -q -E -e '^\s*default\s*:\s*$' ; then
		printf >&6 "\tDefault\n"
		return 0
	fi
	return 1
}

eval_file()
{
	r=0
	file=$1
	prefix=
	src_file=$(echo "$file" | sed -e 's,^cov/\([a-z_./]*\)\.gcov,src/\1,')
	echo >&6 "file=$file src_file=$src_file"

	cat -- "$1" | while IFS= read -r full_line ; do
		printf >&6 "full_line='%s'\n" "$full_line"
		count=$(printf '%s\n' "$full_line" | sed -e 's,^[[:space:]]*\([0-9-]*\):.*$,\1,')
		line=$(printf '%s\n' "$full_line" | sed -e 's,^[^:]*:[[:space:]]*\([0-9]*\):.*$,\1,')
		text=$(printf '%s\n' "$full_line" | sed -e 's,^[^:]*:[^:]*:\(.*\)$,\1,')
		[ "$line" = 0 ] && continue
		printf >&6 "count='%s' line=%s text='%s'\n" "$count" "$line" "$text"
		if [ "$prefix" ] && echo "$text" | grep -q -E -e '^'"$prefix" ; then
			printf >&6 "\tStarts with prefix\n"
			continue
		fi
		printf >&6 "\tReset prefix\n"
		prefix=
		if echo "$text" | grep -q -E -e '^\s*should_not_happen\b' ; then
			prefix=$(echo "$text" | sed -e 's,^\([[:space:]]*\).*$,\1,')
			printf >&6 "\tShould not happen; prefix='$prefix'\n"
			continue
		fi
		if ! echo "$count" | grep -q -E -e '#''#''#' ; then
			printf >&6 "\tNot uncovered\n"
			continue
		fi
		if exclude ; then
			continue
		fi
		printf '%s:%s:%s\n' "$src_file" "$line" "$text"
		echo 1 >"$ret_file"
	done
}

ret=0

for file in cov/*.gcov ; do
	eval_file "$file"
done

exit $(cat -- "$ret_file")
