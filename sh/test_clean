#! /bin/sh
#
# Various tests of cleanliness of the code base.
#

ret=0

# // in C++ files is forbidden (we use it for quickly commenting out things).
grep -E -n '(^|[^:])//' src/*.cc src/*.hh && {
	echo >&2 "*** C++ source files must not contain //"
	ret=1
}

# Double # in script files is forbidden (idem)
find . -type f -a \( -name '*.stu' -o -perm -u+x -o -name Makefile.devel \) -a \! -name '*~' \
	-a \! -path './.git*' -a \! -path './bin/stu.*' -a \! -path './bin/stu' \
	-a \! -path './config*' -a \! -path './build-aux/*' -a \! -path devel/TODO.stu | 
	xargs grep -F -n '#''#' && {
	echo >&2 "*** Shell scripts, makefiles and Stu scripts must not contain #""#"
	ret=1
}

# Triple X
grep -F -n XX''X NEWS man/stu.1.in src/*.cc src/*.hh sh/* && {
	echo >&2 "*** Certain files must not contain 'XX""X'"
	ret=1
}

# Tab in manpage source
grep -F -n "$(printf '\t')" man/stu.1.in && {
	echo >&2 "*** 'man/stu.1.in' must not contain tabs"
	ret=1
}

# Check that we don't use 'sed -r'.  
#
# Background:  'sed -r' is a GNU extension that enabled extended regular
# expressions.  POSIX does not prescribe a "extended regexp" mode for
# sed.  In many implementations, '-E' does the same.  '-E' is more
# portable than '-r', but still not POSIX. 
find_sed() {
	find . -type f -a \! -path './.git*' -a \! -name '*~' |
		xargs grep -lE -- 'sed[[:space:]]+-re'
}
count=$(echo $(find_sed | wc -l))
[ "$count" = 0 ] || {
	echo >&2 "*** 'sed -r' must not be used:"
	echo >&2 === BEGIN
	find_sed
	echo >&2 === END
	ret=1
}

exit "$ret"
