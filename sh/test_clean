#! /bin/sh
#
# Various tests of cleanliness of the code base.
#

find_files()
{
	find . -type f |
	grep -v -E -e '^\./(bin|tests)/' -e '~$' -e '^\./.git/' -e '^\./man/stu\.1$'
}

find_space_file()
{
	find_files | {
		ret=0
		while read file ; do
			head -n 1 -- "$file" | grep -q -E '^\s*$' && {
				echo >&2 "$file:1: File must not begin with empty line"
				ret=1
			}
			tail -n 1 -- "$file" | grep -q -E '^\s*$' && {
				echo >&2 "$file:$(echo $(wc -l <"$file")): File must not end with empty line"
				ret=1
			}
		done
		return "$ret"
	}
}

find_space_line()
{
	find_files |
	xargs grep -E -n '\s$' |
	sed -E -e 's,^([^:]*:[0-9]+:).*$,\1 Line must not end in space,' |
	grep -E '.' >&2 && return 1
	return 0
}

find_double_space()
{
	find_files |
	xargs awk '
BEGIN {
    previ= "x";
}
/^$/ {
    if (previ == "") {
     	print FILENAME ":" (FNR-1) ": Multiple empty lines should not be present";
    };
    previ= "";
}
/./ {
    previ= "x";
}
' |
	grep -E '.' >&2 && return 1
	return 0
}

find_double_slash()
{
	grep -E -n '(^|[^:])//' src/*.cc src/*.hh |
	sed -E -e 's,^([^:]*:[0-9]+:).*$,\1 C++ source file must not contain //,' |
	grep -E '.' >&2 && return 1
	return 0
}

# Check that we don't use 'sed -r'.
#
# Background:  'sed -r' is a GNU extension that enabled extended regular
# expressions.  POSIX does not prescribe a "extended regexp" mode for
# sed.  In many implementations, '-E' does the same.  '-E' is more
# portable than '-r', but still not POSIX.
find_sed() {
	find . -type f -a \! -path './.git*' -a \! -name '*~' |
		xargs grep -lE -- 'sed[[:space:]]+-re'
}

ret=0

find_double_slash || ret=1

# Double # in script files is forbidden (idem)
find . -type f -a \( -name '*.stu' -o -perm -u+x -o -name Makefile \) -a \! -name '*~' \
	-a \! -path './.git*' -a \! -path './bin/stu.*' -a \! -path './bin/stu' \
	-a \! -path './config*' -a \! -path './build-aux/*' -a \! -path devel/TODO.stu |
	xargs grep -F -n '#''#' && {
	echo >&2 "*** Shell scripts, makefiles and Stu scripts must not contain #""#"
	ret=1
}

# Tab in manpage source
grep -F -n "$(printf '\t')" man/stu.1.in && {
	echo >&2 "*** 'man/stu.1.in' must not contain tabs"
	ret=1
}

count=$(echo $(find_sed | wc -l))
[ "$count" = 0 ] || {
	echo >&2 "*** 'sed -r' must not be used:"
	echo >&2 === BEGIN
	find_sed
	echo >&2 === END
	ret
}

find_space_file || ret=1
find_space_line || ret=1
find_double_space || ret=1

# Triple X
grep -F -n XX''X NEWS man/stu.1.in src/*.cc src/*.hh sh/* && {
	echo >&2 "*** Certain files must not contain 'XX""X'"
	ret=1
}

exit "$ret"
