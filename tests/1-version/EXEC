#! /bin/sh

STUFILE=tmp.stu
error=0

# Arguments:
#   $1   Correct exit status
#   $2   Version in %version statement
do_test() {
	exitstatus_correct=$1
	version=$2
	echo "$0:  TESTING $1 $2"
	rm -f $STUFILE A list.err || exit 2

	cat >$STUFILE <<EOF
%version $version
A { echo CORRECT >A }
EOF

	../../bin/stu.test -f $STUFILE 2>list.err
	exitstatus_actual=$?
	echo "   exitstatus=$exitstatus_actual"
	if [ "$exitstatus_actual" != "$exitstatus_correct" ] ; then
		echo >&2 "*** $0:  Error in case $1 $2"
		error=1
	fi

	if [ "$exitstatus_correct" = 0 ] ; then
		if ! grep -qF CORRECT A ; then
			echo >&2 "*** $0:  Incorrect content of file 'A'"
			error=1
		fi
	else
		if ! grep -qF 'is incompatible with' list.err ; then
			echo >&2 "*** $0:  Invalid error output"
			error=1
		fi
	fi
}

# This code is identical to what ./mkversion does
VERSION=$(echo $(cat ../../VERSION))
if echo "$VERSION" | grep -qEv '[0-9]+\.[0-9]+\.[0-9]+' ; then
	echo >&2 "*** $0: Invalid version number '$VERSION'"
	exit 1
fi
VERSION_MAJOR=$(echo "$VERSION" | sed -e 's/^\([0-9]\{1,\}\)\.[0-9]\{1,\}\.[0-9]\{1,\}$/\1/')
VERSION_MINOR=$(echo "$VERSION" | sed -e 's/^[0-9]\{1,\}\.\([0-9]\{1,\}\)\.[0-9]\{1,\}$/\1/')
VERSION_PATCH=$(echo "$VERSION" | sed -e 's/^[0-9]\{1,\}\.[0-9]\{1,\}\.\([0-9]\{1,\}\)$/\1/')

VERSION_MAJOR_INC=$(($VERSION_MAJOR + 1))
VERSION_MAJOR_DEC=$(($VERSION_MAJOR - 1))
VERSION_MINOR_INC=$(($VERSION_MINOR + 1))
VERSION_MINOR_DEC=$(($VERSION_MINOR - 1))
VERSION_PATCH_INC=$(($VERSION_PATCH + 1))
VERSION_PATCH_DEC=$(($VERSION_PATCH - 1))

do_test 2 "$VERSION_MAJOR_INC.0"
do_test 2 "$VERSION_MAJOR_INC.0.0"
if [ $(( VERSION_MAJOR > 0 )) = 1 ] ; then
	do_test 2 "$VERSION_MAJOR_DEC.0"
	do_test 2 "$VERSION_MAJOR_DEC.0.0"
fi
do_test 2 "$VERSION_MAJOR.$VERSION_MINOR_INC"
do_test 2 "$VERSION_MAJOR.$VERSION_MINOR_INC.0"
if [ $(( VERSION_MINOR > 0 )) = 1 ] ; then
	do_test 0 "$VERSION_MAJOR.$VERSION_MINOR_DEC"
	do_test 0 "$VERSION_MAJOR.$VERSION_MINOR_DEC.9999"
fi
do_test 2 "$VERSION_MAJOR.$VERSION_MINOR.$VERSION_PATCH_INC"
if [ $(( VERSION_PATCH > 0 )) = 1 ] ; then
	do_test 0 "$VERSION_MAJOR.$VERSION_MINOR.$VERSION_PATCH_DEC"
fi
do_test 0 "$VERSION_MAJOR.$VERSION_MINOR.$VERSION_PATCH"

rm -f $STUFILE A list.err || exit 2

exit $error
